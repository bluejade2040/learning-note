class Node:
    def __init__(self,val):
        self.val=val
        
class MyQueue:

    def __init__(self):
        """
        Initialize your data structure here.
        """
        self.head=None
        self.size=0

    def push(self, x: int) -> None:
        """
        Push element x to the back of queue.
        """
        if self.head is None:
            self.head=Node(x)
            self.size+=1
        else:
            cur=self.head
            for i in range(self.size-1):
                cur=cur.next
            
            cur.next=Node(x)
                
            self.size+=1
    def pop(self) -> int:
        """
        Removes the element from in front of queue and returns that element.
        """
        temp=0
        if self.size>=2:
            self.size-=1
            temp=self.head.val
            self.head=self.head.next
            return temp
        if self.size==1:
            self.size=0
            temp=self.head.val
            self.head=None
            return temp
        
            

    def peek(self) -> int:
        """
        Get the front element.
        """
        return self.head.val

    def empty(self) -> bool:
        """
        Returns whether the queue is empty.
        """
        
        if self.size==0:
            return True
        else:
            return False


# Your MyQueue object will be instantiated and called as such:
# obj = MyQueue()
# obj.push(x)
# param_2 = obj.pop()
# param_3 = obj.peek()
# param_4 = obj.empty()
